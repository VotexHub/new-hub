--[[

local SolarisLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/sol"))()


local win = SolarisLib:New({
 Name = "SolarisLib",
 FolderToSave = "SolarisLibStuff"


--win:Tab(title <string>)
local tab = win:Tab("Tab 1")

--tab:Section(title <string>)
local sec = tab:Section("Elements")

--sec:Button(title <string>, callback <function>)
sec:Button("Button", function()
  SolarisLib:Notification("Test", "This is a notification test.")
end)

--sec:Toggle(title <string>,default <boolean>, flag <string>, callback <function>)
local toggle = sec:Toggle("Toggle", false,"Toggle", function(t)
  getgenv().command = t
    while true do
        if not getgenv().command then return end
        wait(0.001)
        -- Script
    end
end)

--
toggle:Set(state <boolean>)


--sec:Slider(title <string>,default <number>,max <number>,minimum <number>,increment <number>, flag <string>, callback <function>)
local slider = sec:Slider("Slider", 0,25,0,2.5,"Slider", function(t)
  print(t)
end)

--
slider:Set(state <number>)


--sec:Dropdown(title <string>,options <table>,default <string>, flag <string>, callback <function>)
local dropdown = sec:Dropdown("Dropdown", {"a","b","c","d","e"},"","Dropdown", function(t)
  print(t)
end)


Dropdown:Refresh(options <table>, deletecurrent <boolean>)
Dropdown:Set(option <string>)


--sec:MultiDropdown(title <string>,options <table>,default <table>, flag <string>, callback <function>)
local multidropdown =sec:MultiDropdown("Multi Dropdown", {"a","b","c","d","e"},{"b", "c"},"Dropdown", function(t)
  print(table.concat(t, ", "))
end)


Dropdown:Refresh(options <table>, deletecurrent <boolean>)
Dropdown:Set(option <table>)


--sec:Colorpicker(title <string>, default <color3>, flag <string>, callback <function>)
sec:Colorpicker("Colorpicker", Color3.fromRGB(255,255,255),"Colorpicker", function(t)
  print(t)
end)

--sec:Textbox(title <string> ,disappear <boolean>, callback <function>)
sec:Textbox("Textbox", true, function(t)
  print(t)
end)

--sec:Bind(title <string>, default <keycode>, hold <boolean>, flag <string>, callback <function>)
sec:Bind("Hold Bind", Enum.KeyCode.E, true, "BindHold", function(t)
  print(t)
end)

sec:Bind("Normal Bind", Enum.KeyCode.F, false, "BindNormal", function()
  print("Bind pressed")
end)

bind:Set(state <keycode>)

--sec:Label(text <string>)
local label = sec:Label("Label")


label:Set(text <string>)

local tab2 = win:Tab("Tab 2")
]]

-- Rabbit Simulator 2

if game.PlaceId == 1502601752 then
local SolarisLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/sol"))()

local win = SolarisLib:New({
  Name = "Rabbit Simulator 2 | Undetermined Hub",
  FolderToSave = "SolarisLibStuff"
})

local tab = win:Tab("Main")

local sec = tab:Section("Autofarm")

local autoCarrots = sec:Toggle("Autofarm Carrots", false,"Automatically farms carrots (Must have carrot equipped)", function(t)
  getgenv().command = t
    while true do
        if not getgenv().command then return end
        wait(0.001)

game:GetService("Players").LocalPlayer.Character:FindFirstChild("Sky Carrot").E:FireServer()
        
    end
end)

local autoRebirth = sec:Toggle("Auto Rebirth", false,"Automatically rebirths", function(t)
  getgenv().command = t
    while true do
        if not getgenv().command then return end
        wait(0.05)
game:GetService("ReplicatedStorage").RebirthMe:FireServer()
end

end)

local autoReset = sec:Toggle("Auto Reset Size", false,"Automatically resets your size", function(t)
  getgenv().command = t
    while true do
        if not getgenv().command then return end
        wait(0.05)

game:GetService("ReplicatedStorage").ResetSize:FireServer()
end

end)


local sec2 = tab:Section("Teleports")

sec2:Button("Teleport to Sky Carrot", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-148.272812, 469.079163, -8.80027676, -0.993445814, 2.6414424e-09, -0.114304125, -4.48225768e-09, 1, 6.20653253e-08, 0.114304125, 6.21708764e-08, -0.993445814)
end)

-- [[ Beat Runner ]] 

elseif game.PlaceId == 5578992252 then
	local SolarisLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/sol"))()

local win = SolarisLib:New({
  Name = "Beat Runner | Undetermined Hub",
  FolderToSave = "SolarisLibStuff"
})

local tab = win:Tab("Main")

local sec = tab:Section("Main")

local toggled = false
	
sec:Bind("Invincibility", Enum.KeyCode.R, false, "Allows you to not die from hitting walls", function()
  if toggled == false then
	local folder = Instance.new("Folder", game.ReplicatedStorage)
		folder.Name = "hitboxHolder"
		local hitbox = game.Players.LocalPlayer.Character.Hitbox
		local hitboxClone = hitbox:Clone()
		hitboxClone.Parent = game.ReplicatedStorage:FindFirstChild("hitboxHolder")
		wait(1)
		hitbox:Destroy()
		toggled = true
		value = "true"
		print(toggled)
	elseif toggled == true then
		game.ReplicatedStorage:FindFirstChild("hitboxHolder").Hitbox.Parent = game.Players.LocalPlayer.Character
		wait(1)
	game.ReplicatedStorage:FindFirstChild("hitboxHolder"):Destroy()
		toggled = false
		value = "false"
		print(toggled)
	end
end)
end
